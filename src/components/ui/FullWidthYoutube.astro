---
// props
interface Props {
  youtubeSrc: string,
}

const { youtubeSrc } = Astro.props

// Extract video ID from YouTube URL for looping
const getVideoId = (url: string) => {
  const regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/;
  const match = url.match(regExp);
  return (match && match[2].length === 11) ? match[2] : null;
};

const videoId = getVideoId(youtubeSrc);
const loopUrl = videoId ? `${youtubeSrc}?autoplay=1&controls=0&mute=1&rel=0&modestbranding=1&showinfo=0&loop=1&playlist=${videoId}` : `${youtubeSrc}?autoplay=1&controls=0&mute=1&rel=0&modestbranding=1&showinfo=0`;

// Components
import FullWidthMedia from './base/FullWidthMedia.astro'
---

<FullWidthMedia>
  <div
    class:list={[
      'relative',
      'w-screen',
      'mx-auto',
      'overflow-hidden'
    ]}
    style="aspect-ratio: 16/9; max-width: 100vw;"
  >
    <iframe
      src={loopUrl}
      title="cancunconciergedmc resdisign promo video no audio"
      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
      referrerpolicy="strict-origin-when-cross-origin"
      allowfullscreen
      width="100%"
      height="100%"
      class:list={[
        'absolute',
        'object-cover',
        'parallax',
        'pointer-events-none',
        'left-1/2',
        'top-1/2',
        'transform',
        '-translate-x-1/2',
        '-translate-y-1/2',
        'w-[130%] md:w-[115%]',
        'h-[130%] md:h-[115%]'
      ]}
    ></iframe>
  </div>
</FullWidthMedia>